    <!-- General Page Layout HTML -->    
    <div class="header">
        <div class="title">Manage <span data-bind="pageTitle"></span></div>
        <div class="bread">Ziti Network <span class="secondary">/</span> Manage <span data-bind="pageTitle"></span></div>
        <div class="line"></div>
        <div class="tabs">
            <div class="tab" data-go="/identities">Identities</div>
            <div class="tab" data-go="/recipes">Recipes</div>
            <div class="tab" data-go="/edge-services">Services</div>
            <div class="tab" data-go="/edge-routers">Edge Routers</div>
            <div class="tab" data-go="/transit-routers">Transit Routers</div>
            <div class="tab" data-go="/terminators">Terminators</div>
            <div class="tab" data-go="/posture-checks">Posture Checks</div>
        </div>
    </div>
    <div class="action icon-plus" data-action="add"></div>
    <div class="filters">
        <input id="SearchFilter" data-defined="search" type="text" class="search" placeholder="Type to Filter" />
        <div class="clear icon-clear" data-defined="clear"></div>
        <div class="searchButton icon-search"></div>
        <div class="counters"><span id="Start">-</span>-<span id="End">-</span> of <span id="Total">-</span></div>
        <div class="navigate prev icon-prev disabled"></div>
        <div class="navigate next icon-next disabled"></div>
    </div>
    <div class="area data" data-defined="table">
        <div class="table">
            <div class="head grid eightOS">
                <div class="col">
                    <div class="selector all"></div>
                </div>
                <div class="col sort asc" data-by="name">Name<div class="dragger"></div></div>
                <div class="col desktop">O/S<div class="dragger"></div></div>
                <div class="col desktop">Role Attributes<div class="dragger"></div></div>
                <div class="col desktop sort" data-by="isVerified">Verified<div class="dragger"></div></div>
                <div class="col desktop">Online<div class="dragger"></div></div>
                <div class="col desktop sort" data-by="createdAt">Created</div>
                <div class="col"></div>
            </div>
            <div class="rows" data-defined="rows">
                <!-- This area will be replaced by data rows -->
            </div>
        </div>
    </div>
    <div class="nodata" data-defined="empty">No <span data-bind="pageTitle"></span> Defined, Click the plus to add A <span data-bind="singular"></span>.</div>



    <!-- Template HTML will be used to display rows of data -->
    <div id="RowTemplate" class="row grid eightOS template" data-defined="template">
        <div class="col">
            <div class="selector" data-id="{{id}}"></div>
        </div>
        <div class="col" data-id="{{id}}">
            <span class="circle {{isOnline}}" title="Online"></span>
            <span class="circle {{isVerified}}" title="Verified"></span>
            <strong>{{name}}</strong>
        </div>
        <div class="col desktop" data-id="{{id}}" style="overflow: unset;"><span class="os {{os}}" data-balloon-pos="up" aria-label="{{osDetails}}"></span></div>
        <div class="col desktop" data-id="{{id}}">{{selector.roleAttributes}}</div>
        <div class="col desktop" data-id="{{id}}">{{isVerified}}</div>
        <div class="col desktop" data-id="{{id}}">{{isOnline}}</div>
        <div class="col desktop" data-id="{{id}}">{{moment.createdAt}}</div>
        <div class="col allowOver">
            <div class="dots" data-id="{{id}}">...
                <div class="gridMenu" data-id="{{id}}">
                    <div class="gridAction" data-id="{{id}}" data-action="edit">Edit</div>
                    <div class="gridAction" data-id="{{id}}" data-action="delete">Delete</div>
                </div>
            </div>
        </div>
    </div>



	<!-- Modification Modals -->
    <div id="AddModal" class="modal box full">
        <div class="sized">
            <div class="close icon-close"></div>
            <div class="title adding">Create <span data-bind="singular"></span></div>
            <div class="subtitle adding">Add a New <span data-bind="singular"></span> by completing the following form</div>
            <div class="title editing">Edit <span data-bind="singular"></span></div>
            <div class="subtitle editing">Change the <span data-bind="singular"></span> Details</div>
            <label for="Name">Name</label>
            <input id="Name" data-bind="data.name" type="text" maxlength="500" placeholder="Enter a name" data-enter="SaveButton" />
            <div class="grid checkLabel">
                <div id="IsTunnelerEnabled" class="toggle">
                    <div class="switch"></div>
                    <div class="label"></div>
                </div>
                <div class="toggleLabel">Is Tunneler Enabled?</div>
            </div>
            <label for="Roles">Router Role Attributes</label>
            <div id="Roles"></div>
            <div id="TagArea" data-tagarea="router"></div>
            <div id="TagExtended"></div>
            <div class="buttons">
                <div class="linkButton closer">Oops, No get me out of here</div>
                <div id="SaveButton" class="button" data-defined="save">Save</div>
            </div>
        </div>
	</div>
    
    
    <script language="javascript" type="text/javascript">
        page = {
            binding: {
                pageTitle: "Routers",
                singular: "Router"
            },
            filterObject: null,
            roles: null,
            init: function() {
                page.roles = new Selector("Roles","roles");
                page.roles.isForceHash = false;
                page.roles.init();
                page.filterObject = new Data("edge-routers");
                page.filterObject.init(true, true);
            }, 
            row: function(template, data) {
                var os = "other";
                var osDetails = "";
                if (data.versionInfo) {
                    if (data.versionInfo.os&&data.versionInfo.os.toLowerCase().indexOf("darwin")>=0) os = "apple";
                    else if (data.versionInfo.os&&data.versionInfo.os.toLowerCase().indexOf("linux")>=0) os = "linux";
                    else if (data.versionInfo.os&&data.versionInfo.os.toLowerCase().indexOf("android")>=0) os = "android";
                    else if (data.versionInfo.os&&data.versionInfo.os.toLowerCase().indexOf("windows")>=0) os = "windows";
                    
                    if (data.versionInfo.os) osDetails += "OS: "+data.versionInfo.os;
                    if (data.versionInfo.arch) osDetails += "&#10;Arch: "+data.versionInfo.arch;
                    if (data.versionInfo.buildDate) osDetails += "&#10;Build: "+moment(data.versionInfo.buildDate).format("MM/DD/YYYY");
                    if (data.versionInfo.version) osDetails += "&#10;Version: "+data.versionInfo.version;
                    if (data.versionInfo.revision) osDetails += "&#10;Release: "+data.versionInfo.revision;
                }
                if (osDetails.length==0) osDetails = "No Info Available";
                template = template.split("{{os}}").join(os);
                template = template.split("{{osDetails}}").join(osDetails);
                return template;
            },
            gridAction: function(e) {
                var action = $(e.currentTarget).data("action");
                var id = $(e.currentTarget).data("id");
                if (action=="delete") page.filterObject.delete([id]);
                else if (action=="edit") page.edit(id);
            },
            edit: function(id) {
                var detail = page.filterObject.details(id);
                page.roles.val(detail.roleAttributes);
                if (detail.isTunnelerEnabled) $("#IsTunnelerEnabled").addClass("on");
                else $("#IsTunnelerEnabled").removeClass("on");
                modal.show("AddModal");
            },
            save: function() {
                if (page.validate()) {
                    var obj = {
                        name: $("#Name").val(),
                        roleAttributes: page.roles.val(),
                        isTunnelerEnabled: $("#IsTunnelerEnabled").hasClass("on"),
                        tags: tags.val()
                    };
                    page.filterObject.save(obj);
                } else growler.form();
            },
            validate: function() {
                $(".errors").removeClass("errors");
                if ($("#Name").val().trim().length==0) $("#Name").addClass("errors");
                return $(".errors").length==0;
            }
        }
    </script>