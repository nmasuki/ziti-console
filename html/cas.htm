    <!-- General Page Layout HTML -->
    <div class="header">
        <div class="title"><span data-i18n="Manage"></span> <span data-i18n="CAs"></span></div>
        <div class="bread"><span data-i18n="ZitiNetwork"></span> <span class="secondary">/</span> <span data-i18n="Manage"></span> <span data-i18n="CAs"></span></div>
        <div class="line"></div>
        <div class="tabs">
            <div class="tab selected"><span data-i18n="Manage"></span> <span data-i18n="CAs"></span></div>
        </div>
    </div>
    <div class="action icon-plus" data-action="add"></div>
    <div class="filters">
        <input id="SearchFilter" data-defined="search" type="text" class="search" data-i18n="EnterFilter" />
        <div class="clear icon-clear" data-defined="clear"></div>
        <div class="searchButton icon-search"></div>
        <div class="counters"><span id="Start">-</span>-<span id="End">-</span> <span data-i18n="Of"></span> <span id="Total">-</span></div>
        <div class="navigate prev icon-prev disabled"></div>
        <div class="navigate next icon-next disabled"></div>
    </div>
    <div class="area data" data-defined="table">
        <div class="noitems"></div>
        <div class="table">
            <div class="head grid eight">
                <div class="col">
                    <div class="selector all"></div>
                </div>
                <div class="col sort asc" data-by="name" data-i18n="Name"><div class="dragger"></div></div>
                <div class="col desktop sort" data-by="isVerified" data-i18n="Verified"></div>
                <div class="col desktop sort" data-by="isAutoCaEnrollmentEnabled" data-i18n="AutoEnroll"></div>
                <div class="col desktop sort" data-by="isOttCaEnrollmentEnabled" data-i18n="OTTAuto"></div>
                <div class="col desktop sort" data-by="isAuthEnabled" data-i18n="Auth"></div>
                <div class="col desktop sort" data-by="dateCreated" data-i18n="Created"></div>
                <div class="col"></div>
            </div>
            <div class="rows" data-defined="rows">
                <!-- This area will be replaced by data rows -->
            </div>
        </div>
    </div>
    <div class="nodata" data-defined="empty"><span data-i18n="No"></span> <span data-i18n="CA"></span> <span data-i18n="NoneDefined"></span> <span data-i18n="CA"></span>.</div>



    <!-- Template HTML will be used to display rows of data -->
    <div id="RowTemplate" class="row grid eight template" data-defined="template">
        <div class="col">
            <div class="selector" data-id="{{id}}"></div>
        </div>
        <div class="col" data-id="{{id}}"><strong>{{name}}</strong></div>
        <div class="col desktop" data-id="{{id}}">{{isVerified}}</div>
        <div class="col desktop" data-id="{{id}}">{{isAutoCaEnrollmentEnabled}}</div>
        <div class="col desktop" data-id="{{id}}">{{isOttCaEnrollmentEnabled}}</div>
        <div class="col desktop" data-id="{{id}}">{{isAuthEnabled}}</div>
        <div class="col desktop" data-id="{{id}}">{{moment.createdAt}}</div>
        <div class="col allowOver">
            <div class="dots" data-id="{{id}}">...
                <div class="gridMenu" data-id="{{id}}">
                    <div class="gridAction" data-id="{{id}}" data-action="edit" data-i18n="Edit"></div>
                    <div class="gridAction {{hiddenClass}}" data-id="{{id}}" data-action="verify" data-i18n="Verify"></div>
                    <div class="gridAction" data-id="{{id}}" data-action="delete" data-i18n="Delete"></div>
                </div>
            </div>
        </div>
    </div>



    <!-- Modification Modals -->
    <div id="AddModal" class="modal box full">
        <div class="sized large">
            <div class="close icon-close"></div>
            <div class="title adding"><span data-i18n="Create"></span> <span data-bind="singular"></span></div>
            <div class="subtitle adding"><span data-i18n="AddNew"></span> <span data-bind="singular"></span></div>
            <div class="title editing"><span data-i18n="Edit"></span> <span data-bind="singular"></span></div>
            <div class="subtitle editing"><span data-i18n="Change"></span> <span data-bind="singular"></span> <span data-i18n="Details"></span></div>
            <label for="Name" data-i18n="Name"></label>
            <input id="Name" data-bind="data.name" type="text" maxlength="500" data-i18n="EnterName" />
            <label for="IDRoles" data-i18n="Name"></label>
            <div id="IDRoles"></div>
            <div class="three">
                <div>
                    <label data-i18n="IsAuto"></label>
                    <div id="IsAutoEnrollmentEnabled" class="toggle">
                        <div class="switch"></div>
                        <div class="label"></div>
                    </div>
                </div>
                <div>
                    <label data-i18n="OTTEnabled"></label>
                    <div id="IsOTTEnrollmentEnabled" class="toggle">
                        <div class="switch"></div>
                        <div class="label"></div>
                    </div>
                </div>
                <div id="UserArea">
                    <label data-i18n="AuthEnabled"></label>
                    <div id="IsAuthEnabled" class="toggle">
                        <div class="switch"></div>
                        <div class="label"></div>
                    </div>
                </div>
            </div>
            <label for="Pem"><span data-i18n="PEM"></span> <span id="SelectFile" class="note" data-i18n="SelectFile"></span><input id="PemFile" type="file" accept=".pem"/></label>
            <textarea id="Pem" data-bind="data.certPem" style="height: 300px; font-size: 12px;" data-i18n="PastePEM"></textarea>
            <div id="TagArea"></div>
            <div class="buttons">
                <div class="linkButton closer" data-i18n="Oops"></div>
                <div id="SaveButton" class="button" data-defined="save" data-i18n="Save"></div>
            </div>
        </div>
    </div>

    <div id="VerifyModal" class="modal box full">
        <div class="sized large">
            <div class="close icon-close"></div>
            <div class="title" data-i18n="VerifyCertificate"></div>
            <div class="subtitle" data-i18n="SendCertificate"></div>
            <div>
                <h3 data-i18n="ToDo"></h3>
                <span data-i18n="VerifyDirectionStart"></span>
                <strong><span data-bind="data.verificationToken"></span></strong> 
                <span data-i18n="VerifyDirectionEnd"></span>
            </div>
            <label for="VerificationCode" data-i18n="VerificationToken"></label>
            <input id="VerificationCode" data-bind="data.verificationToken" type="text" maxlength="500" readonly="true" />
            <label for="Certificate">
                <span data-i18n="Certificate"></span>
                <span id="SelectCertificateFile" class="note" data-i18n="SelectCertificate"></span>
                <input id="CertificateFile" type="file" accept=".pem"/>
            </label>
            <textarea id="Certificate" style="height: 300px; font-size: 12px;" data-i18n="EnterCert"></textarea>
            <div class="buttons">
                <div class="linkButton closer" data-i18n="Oops"></div>
                <div id="VerifyButton" class="button" data-i18n="Verify"></div>
            </div>
        </div>
    </div>

    <script language="javascript" type="text/javascript">
        page = {
            filterObject: null,
            identityRoles: null,
            init: function() {
                this.events();
                page.identityRoles = new Selector("IDRoles","identities","identities");
                page.identityRoles.init();
                page.filterObject = new Data("cas");
                page.filterObject.init(true, true);
            }, 
            events: function() {
                $("#PemFile").change(page.loadFile);
                $("#CertificateFile").change(page.loadCertFile);
                $("#SelectFile").click(function() { $("#PemFile").click(); });
                $("#SelectCertificateFile").click(function() { $("#CertificateFile").click(); });
                $("#VerifyButton").click(page.verify); 
                $("#VerificationCode").click(page.copy);
            },
            copy: function() {
                document.querySelector("#VerificationCode").select();
                document.execCommand("copy");
                growler.info("Code: "+$("#VerificationCode").val()+" copied to clipboard");
            },
            row: function(template, data) {
                if (data.isVerified) template = template.split("{{hiddenClass}}").join("hidden");
                else template = template.split("{{hiddenClass}}").join("");
                return template;
            },
            gridAction: function(e) {
                var action = $(e.currentTarget).data("action");
                var id = $(e.currentTarget).data("id");
                if (action=="delete") page.filterObject.delete([id]);
                else if (action=="edit") page.edit(id);
                else if (action=="verify") page.showVerify(id);
            },    
            loadFile: function(e) {
                try {
                    var fileToLoad = document.getElementById("PemFile").files[0];
                    var fileReader = new FileReader();
                    fileReader.onload = function(fileLoadedEvent) {
                        var textFromFileLoaded = fileLoadedEvent.target.result;
                        $("#Pem").val(textFromFileLoaded);
                    };
                    fileReader.readAsText(fileToLoad, "UTF-8");
                } catch (e) {
                    growler.error("Invalid File", locale.get("ErrorInvalidFile"));
                } 
            },
            loadCertFile: function(e) {
                try {
                    var fileToLoad = document.getElementById("CertificateFile").files[0];
                    var fileReader = new FileReader();
                    fileReader.onload = function(fileLoadedEvent){
                        var textFromFileLoaded = fileLoadedEvent.target.result;
                        $("#Certificate").val(textFromFileLoaded);
                    };
                    fileReader.readAsText(fileToLoad, "UTF-8");
                } catch (e) {
                    growler.error("Invalid File", locale.get("ErrorInvalidFile"));
                } 
            },
            showVerify: function(id) {
                var detail = page.filterObject.details(id);
                modal.show("VerifyModal");
            },
            edit: function(id) {
                var detail = page.filterObject.details(id);
                $("#Pem").attr("readonly",true);
                $("#SelectFile").hide();
                if (detail.isOttCaEnrollmentEnabled) $("#IsEnrollmentEnabled").addClass("on");
                if (detail.isAuthEnabled) $("#IsAuthEnabled").addClass("on");
                page.identityRoles.val(detail.identityRoles);
                modal.show("AddModal");
            },
            save: function() {
                if (page.validate()) {
                    var obj = {
                        name: $("#Name").val(),
                        isAutoCaEnrollmentEnabled: $("#IsAutoEnrollmentEnabled").hasClass("on"),
                        isOttCaEnrollmentEnabled: $("#IsOTTEnrollmentEnabled").hasClass("on"),
                        identityRoles: page.identityRoles.val(),
                        isAuthEnabled: $("#IsAuthEnabled").hasClass("on"),
                        tags: tags.val()
                    };
                    if (page.filterObject.editId=="") obj.certPem = $("#Pem").val();
                    page.filterObject.save(obj);
                } else growler.form();
            },
            validate: function() {
                $(".errors").removeClass("errors");
                if ($("#Name").val().trim().length==0) $("#Name").addClass("errors");
                if ($("#Pem").val().trim().length==0) $("#Pem").addClass("errors");
                return $(".errors").length==0;
            },
            reset: function() {
                $("#SelectFile").show();
                $("#Pem").attr("readonly",false);
            },
            verify: function(e) {
                service.call("verify", { id: page.filterObject.editId, cert: $("#Certificate").val() }, page.verified);
            },
            verified: function(e) {
                if (e.error) growler.error(e.error);
                else {
                    growler.success(locale.get("CertVerified"));
                    modal.close();
                    page.filterObject.editId = "";
                    page.filterObject.get();
                }
            }
        }
    </script>